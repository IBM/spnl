name: core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# cancel any prior runs for this workflow and this PR (or branch)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
    
env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: core
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Inspect target cache
        run: ls target && find target | wc -l
      - name: Setup protoc
        run: |
          if [ $RUNNER_OS = "Linux" ]
          then
            if [ $RUNNER_ARCH = "X64" ]
            then arch=x86_64
            elif [ $RUNNER_ARCH = "ARM64" ]
            then arch=aarch_64
            else
              echo "Unsupported arch for protoc"
              exit 1
            fi
            curl -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-linux-$arch.zip
          elif [ $RUNNER_OS = "macOS" ]
          then curl -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-osx-universal_binary.zip
          fi
          unzip protoc.zip -d $HOME/.local
      # - uses: Swatinem/rust-cache@v2
      # - uses: pydantic/ollama-action@v3

      - name: cargo test
        run: cargo test --all-features --all

      - name: rustfmt
        run: cargo fmt --all -- --check

      - name: clippy
        run: cargo clippy --all --all-features --tests -- -D warnings
